@using System.Data.Entity.ModelConfiguration.Conventions
@using System.Drawing
@using AmphiprionCMS.Areas.AmpAdministration.Models
@model AmphiprionCMS.Areas.AmpAdministration.Models.PageHierarchyModel[]
@{
    ViewBag.PageTitle = "Pages";
}



<div class="tree col-md-9">
    <div id="errors" class="callout error" style="display:none;"></div>
    <p>
        <a href="@Url.Action("Add")" class="add-page"><i class="icon-plus"></i>Add a New Page</a>
    </p>
    <ul>
        @ShowTree(Model[0])
    </ul>
</div>
<div class="col-md-3">
    <aside class="well">
        <ul class="tree-legend">
            <li>
                <i class="icon-checkmark-circle green"></i><span>Published and visible</span>
            </li>
            <li>
                <i class="icon-clock"></i><span>Published for a future date</span>
            </li>
            <li>
                <i class="icon-home"></i><span>Set as Home Page</span>
            </li>
        </ul>
        <p class="well">
            ***You can only delete pages without children.  To delete a page with children, first relocate the children to another parent page. <br/><strong>WARNING:</strong>Deleting or changing the parent of an object will make the page no longer available to users who may have bookmarked it.
        </p>
    </aside> 
</div>

@Html.AntiForgeryToken()
    @helper ShowTree(PageHierarchyModel root)
{
    bool hasChildren = root.Children.Any();
        <li>
            @if (hasChildren)
            {
                <i class="icon-minus expand" title="Expand this branch"></i>
            }
            @if (root.IsRoot)
            {
                <span data-id="@root.Id" data-title="Root" ><i class="@(hasChildren?"icon-copy3": "icon-file4")"></i>Root</span>
            }
            else
            {
                <span data-id="@root.Id" data-title="@root.Title" class="@(root.IsHomepage?"homepage": "")">
                    <i class="@(hasChildren?"icon-copy3": "icon-file4")"></i>
                    @if (root.IsHomepage)
                    {
                        <i class="icon-home" title="This is your current Home Page"></i>

                    }
                    @root.Title (@root.Slug)
                </span>
            }
        
        
      
            @if (!root.IsRoot)
            {
                <a href="@Url.Action("Edit","Page",new {id=root.Id})" class="edit-page toggle" style="display:none;"><i class="icon-pencil"></i>Edit</a>
                if (!hasChildren)
                {
                    <a href="#" class="delete-page toggle red" data-id="@root.Id" style="display: none;"><i class="icon-close"></i>Delete</a>
                }
          
            }

            <a href="@Url.Content(string.IsNullOrEmpty(root.Path)?"~/":"~" + root.Path)"><i class="icon-eye" title="View Page"></i>View</a>
            @if (root.IsApproved)
            {

                if (!root.PublishDateUtc.HasValue || root.PublishDateUtc > DateTime.UtcNow)
                {
                    <i class="icon-clock" title="This post will be published in the future"></i>
                }
                else
                {
                    <i class="icon-checkmark-circle green" title="This post is published"></i>
                }
            }
            @if (hasChildren)
            {
                <ul>
                    @foreach (var page in root.Children)
                    {
                        @ShowTree(page)
                    }
                </ul>
            }
        </li>
}

    <script type="text/javascript">
        setNavigation('pages');

        $(function () {
            $('.tree li:has(ul)').addClass('parent_li').find('>span').attr('title', 'Collapse this branch');
            $('.tree li.parent_li > i.expand').on('click', function (e) {
                var children = $(this).parent('li.parent_li').find('>ul>li');
                if (children.is(":visible")) {
                    children.hide('fast');
                    $(this).attr('title', 'Expand this branch').addClass('icon-plus').removeClass('icon-minus');
                } else {
                    children.show('fast');
                    $(this).attr('title', 'Collapse this branch').addClass('icon-minus').removeClass('icon-plus');
                }
                e.stopPropagation();
            });
            $('.tree li > span').on('click', function (e) {
                var wasSelected = $(this).hasClass("selected");
                $('.tree li > span').removeClass("selected");
                $(".tree li a.toggle").hide();
                setAddLink(null, null);
                if (!wasSelected) {
                    $(this).addClass("selected");
                    $(this).nextAll('a.toggle').show();
                    setAddLink($(this).data('title'), $(this).data('id'));
                }
                e.stopPropagation();
            });

            $("a.delete-page").click(function () {
                $.amphiprion.globals.clearModelErrors('errors');
                if (!window.confirm("Are you sure you wish to delete this page?  It cannot be undone and may break bookmarks."))
                    return;
                $.amphiprion.globals.showWait();
                var $this = $(this);
                var id = $this.data("id");

                var aft = $('[name=__RequestVerificationToken]').val();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Delete","PageAdmin")',
                    cache: false,
                    headers: { __RequestVerificationToken: aft },
                    contentType: 'application/x-www-form-urlencoded',
                    data: { id: id },
                    success: function () {
                        var li = $this.parent('li');
                        var ul = li.parent('ul');

                        li.slideUp(function() {
                            $(this).remove();
                        });
                        if (!ul.has('li'))
                            ul.remove();
                    },
                    error: function (xhr) {
                        var json = JSON.parse(xhr.responseText);
                        $.amphiprion.globals.renderModelErrors(json, 'errors');
                    },
                    complete: function () {
                        $.amphiprion.globals.hideWait();
                    }
                });
            });

            var actionId = $.amphiprion.globals.getQueryStringParm("eid");
            if (actionId && actionId != '') {

                var node = $("span[data-id='" + actionId + "']");
                   var int= setInterval(function() {
                       node.toggleClass("page-title-flash");
                    }, 500);
                
                   setTimeout(function () {
                       clearInterval(int);
                       node.removeClass("page-title-flash");
                   }, 5000);
            }


        });

        function setAddLink(title, id) {
            var base = '@Url.Action("Add")';
            var url = base;
            var baseText = 'Add a New Page';
            var text = baseText;
            if (id) {
                url = base + '?parentId=' + id;
                text = text + ' Under \'' + title + '\'';
            }
            $('a.add-page').attr('href', url).text(text);
        }
    </script>
